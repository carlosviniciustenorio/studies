IAM = Gerenciamento de identidade e acesso
	É possível criar grupos para uma organização.
	É possível ter um usuário em mais de um grupo
	Não é possível ter um grupo dentro de outro grupo
	É possível ter usuário sem grupo
		
	Policy
		É possível criar políticas
		É possível inserir políticas direto no usuário
		É possível inserir políticas no grupo de usuários e consequentemente os usuários do grupo terão essas políticas
		É possível adicionar políticas de senha e autenticação em conjunto com (MFA) Multi-factor authentication (outros dispositivos).
		
	Roles
		Funciona como permissões para serviços AWS
		ex: Uma instância do EC2 recebe uma IAM Role e tenta acessar alguma informação/serviço da AWS,
			essa instância usará a IAM Role como permissão. Caso esteja certo, terá acesso.
			
	Security Tools
		Access reports > Credential Reports = Extrai um relatório de credenciais no formato csv.
		Users > User > Access Advisor = Exibe todos os serviços utilizados pelo usuário e os que ele tem acesso mas não utiliza.
			OBS: Como na AWS trabalhamos com o princípio de menor privilégio, esse relatório nos permite retirar permissões não utilizadas por um usuário.
					
EC2 = Fundamentals Instance Storage 
	É possível criar instâncias AWS configurando memória, processamento, etc...
		Uma das principais vantagens da nuvem, visto que se tivéssemos que fazer isso de maneira local, 
			o tempo seria muito superior para configurar um servidor.
	É considerado uma boa prática parar as instâncias enquanto não estiver utilizando.
	É considerado uma boa prática encerrar as instâncias caso não tenha mais utilidade, pois na nuvem tudo é descartável
	É possível criar backups antes de encerrar as instâncias.
	
	Classic ports to know
		22 = SSH (secure shell) - log into a Linux instance
		21 = FTP (File transfer protocol) - upload files using SSH
		22 = SFTP (Secure File Transfer Protocol) - upload files using SSH
		80 = HTTP - access unsecured websites
		443 = HTTPS - access secured websites
		3389 = RDP (Remote Desktop Protocol) - log into a Windows instance
	
	Grupo de Segurança (Security group) = é responsável por configurar os meios de conexões com o EC2.
		Ex: Caso a sua instância não tenha no grupo de segurança uma regra de entrada no protocolo HTTP,
			não será possível acessar a sua instância por um browser.
		É possível ter uma instância do EC2 com vários grupos de segurança, o resultado é a soma de todos eles.

EC2 = Instance Storage 		
	Elastic Block Store

		EBS Volume 
			É um volume específico para cada instância, podendo a instância estar vinculada a mais de um volume, ele pode ser utilizado para mais de uma, porém, nessa certificação isso não é considerado
			É possível ter um volume não vinculado a uma instância, pois ele não depende de uma instância para existir
			É possível manter o volume após o encerramento da instância, desmarcando a flag que é responsável por essa configuração.
			Nível gratuito: 30 GB de armazenamento EBS gratuito do tipo SSD ou SSD Magnético por mês
			É bloqueado por zona, se a zona da sua instância for X, o volume tem que ser criando na zona X para ser utilizado
			
		EBS Snapshot
			É um backup que pode ser realizado e utilizando como base para restaurar uma outra instância da mesma ou outra região.
			É possível criar um volume a partir do Snapshot realizado, para a mesma ou outra região.
			
	EC2 Image Builder
		É possível automatizar a criação de uma imagem com um sistema operacional, softwares desejados, rodar testes e criar instâncias automaticamente
		É possível fazer todo o fluxo acima porém criar a instância de forma manual.
		Deve-se atentar com a imagem que irá escolher pois algumas não são compatíveis com a instância t2.micro (gratuita)
		Deve-se atentar para fazer de forma manual pois a forma automática cria uma instância paga.
		
	EC2 Instance Store
		Tem um melhor desempenho para processamento input/output pois é diretamente no Hardware, porém é um armazenamento efêmero, onde você pode perder tudo ao parar a máquina.
		É uma boa utilizar para cache, dados temporários, buffer, conteúdos temporários.
		Não é uma boa utilizar para persistência de dados de longo prazo, como por ex um DB, use o EBS (Volume + Snapshot).
		Caso a instância falhe, o hardware também falhará
			
	AMI = Amazon Machine Image
		É possível criar uma AMI a partir de uma instância. Isso faz com que a instância iniciada a partir dessa AMI tenha todas as configurações já feitas
		
	EFS = Elastic File System
		Serviço Regional
		Só funciona com instâncias Linux EC2
		É possível utilizar o armazenamento em mais de uma região e em mais de uma instância ao mesmo tempo, diferente do EBS (Elastic Block Store)
		Ao utilizar o EFS, todas as instâncias de diferente zonas que usam o EFS, vão persistir e consumir os arquivos da mesma origem em tempo real.
		OBS: A EFS-IA tem um desconto de 92% comparada a Padrão pois quando utilizamos EFS-IA concordamos que não buscaremos os arquivos todos os dias, apenas eventualmente
		
	Amazon FSx
        Sistemas para gerenciamento de arquivos, caso não queira usar o S3 por exemplo.	
        Existem os seguintes FSx: FSx for Lustre, FSx for Windows File Server, FSx for NetApp ONTAP

    Escalabilidade 
        É a capacidade de um sistema acomodar uma carga maior, tornando o hardware mais forte ou ampliando, ou adicionando nós ampliados
        Vertical 
            Temos uma aplicação no t2.micro e alteramos para t2.large a fim de atender uma demanda maior
            Há um limite de escalonamento vertical, que é o limite do Hardware
        
    Elasticidade
        Horizontal
            Ao invés de aumentar o tamaho da instância, aumentamos a quantidade de instâncias para a aplicação
            Ao aumentar o número de instância, é considerado um escalonamento externo
            Ao diminuir o número de instância, é considerado um escalonamento
    
        High Availability (Alta disponibilidade)
            Vai de mãos dados com o dimensionamento horizontal
            Significa que vc está executando seu app em mais de uma zona de disponibilidade na AWS
            Ex: Call center em NY e Call Center em San Francisco
                Caso NY tenha um desastre, a operação de San Francisco não será afetada.
    
    Agilidade
        Os recursos estão a apenas um clique de distância. Ao invés de uma confugração nova demorar uma semana por ex, demora 10s.

        Alta disponibilidade e Escalabilidade para EC2
			
AWS Fundamentals: ELB + ASG

    Elastic Load Balancer

        Normalmente são mapeados 3 zonas diferentes com subredes a fim de ter uma disponibilidade maior.
        A configuração do servidor é feita pela AWS, porém é possível criar um Load Balancer, contudo, você será responsável pela configuração, manutenção, etc...
        Recebe uma solicitação e destibui conforme necessário. Caso uma instância esteja com problema, a solicitação será enviada a outra instância.        
    
        Health Checks
            Cruciais para saber se as instâncias estão aptas para receber requisições.
            Ele testa um endpoint específico de cada instância e caso a resposta não seja 200, o Load Balancer não irá distribuir tráfego para essa instância
    
        Application (ALB):
            Load Balancer somente para aplicações web, protocolo HTTP/HTTPS. = Camada 7
            Latência de 400 milissegundos
            É possível distribuir o balanceamento entre várias aplicações na mesma máquina (Contâineres)
            Tem suporte para HTTP/2 e WebSocket
            Suporta redirecionamento, de HTTP para HTTPS por exemplo
            É possível realizar um roteamento baseado em diferentes target groups (grupos-alvos):
                Endpoint: example.com/users - example.com/posts
                Hostname: one.example.com - other.example.com
                QueryString: example.com/users?id=123&order=false

            Ao utilizar um ALB, só é possível saber o IP do cliente através do X-Forwarded-For, que é inserido no cabeçalho do Load Balancer.
                Pois o Load Balancer recebe a solicitação do cliente e consulta a sua instância usando o IP privado dela.
        
        Network (NLB):
            Load Balancer somente para rede, protocolo TCP, TLS ou UDP. = Camada 4
            Latência de 100 milissegundos
            Permite lidar com milhões de solicitações por segundo
            Desempenho extremamente alto e a latência é muiuto menor que o ALB
            Contém um IP estático por Zona de disponibilidade e suporta IP Elástico
            Há a possibilidade de usar o NLB junto com o ALB, caso você queira aproveitar um recurso do NLB, como por exemplo ter IP estático.
    
		Gateway (GLB):
			Load Balancer voltado para IP = Camada 3 (Camada de redes para pacotes IP)
            Usa o protocolo GENEVE na porta 6081
            Única entrada e saída para todos os tráfegos
            Distribui o tráfego entre um conjunto de dispositivos virtuais no Target Group
            É utilizado a fim de ter mais segurança nos tráfegos da sua aplicação
                Ao invés do tráfego ir direto para a aplicação através de um ALB por exemplo, o tráfego vai para o GLB,
                    onde há 3 instâncias para validar Firewalls, Prevenção de Sistemas, Dectar Intrusos, Manipulação de Cargas, etc...
                Com isso, o GLB pode diminuir o tráfego dos usuários na sua aplicação ou aprovar, sendo aprovado, o tráfego vai para a aplicação.

            Target Groups para o GLB:
                Pode ser criado para instâncias EC2
                Pode ser criado com endereços de IP, porém, eles devem ser privados
        
        Stick Sessions (Session Affinity)
            Compatível com CLB e ALB
            A ideia é a seguinte: 
                    O cliente fará uma requisição para o ALB por exemplo. 
                    Após isso, o ALB redirecionará a requisição para uma instância EC2. Sendo assim, esse cliente será sempre redirecionado para a mesma instância.
                    Isso a fim de manter a sessão do usuário por exemplo.

            Para isso suceder, um cookie  é enviado como parte da solicitação dos clientes ao load balancer.
            Sendo assim, há os seguintes tipos de Cookies:
                
            - Aplication-based Cookies:
                
                Pode ser um Cookie personalizado
                    Gerado pelo target (destino) = próprio aplicativo
                    É possível atribuir quaisquer atributos personalizados pela aplicação
                    O nome do Cookie deve ser especificado para cada Target Group
                    Não podem ser nomeados como "AWSALB, AWSALBAPP ou AWSALBTG". Pois já são utilizados pelo ELB
                
                Ou pode ser um Cookie do aplicativo
                    Gerado pelo Load Balancer
                    Nome do cookie por padrão será (AWSALBAPP)

            - Duration-based Cookies:
                Gerado pelo Load Balancer
                O nome do Cookie será AWSALB para ALB, AWSELB para CLB                
                Terá um prazo de validade baseado na duração, que é gerada pela própria resposta
        
        Cross-Zone Load Balancing

            Divide as requisições para o total de instâncias independente da zona de disponibilidade.
            Ex: Há um load balancer configurado para duas zonas de disponibilidade
                A zona X contém 2 instâncias EC2 e a zona Z contém 8 instâncias.
                Com o Cross-Zone, ainda que o cliente envie 50% do tráfego por AZ, o Load Balancer dividirá para as 10 instâncias independente da AZ.
                Caso o Cross-Zone não seja habilitado ou seja desabilitado, o tráfego será enviado pras instâncias das respectivas AZ.
            
            Cross-Zone no Load Balancer:
            
                ALB
                    Está sempre ativado, não é possível desativar.
                    Não paga pela transferência de dados entre zonas

                NLB
                    Desabilitado por padrão. Porém, caso você habilite não irá pagar nada por isso.
                    Paga pela transferência de dados entre zonas caso você ative
                
                CLB
                    Desabilitado por padrão. Porém, caso você habilite não irá pagar nada por isso.
                    Não paga pela transferência de dados entre zonas caso você ative

        SSL/TLS
            TSL = Mais nova versão do SSL, significa "Transport Layer Security". (Atualmente são mais utilizados)      
            SSL = "Secure Sockets Layer"
                O certificado SSL permite que o tráfego entre o cliente e o load balancer seja criptografado durante o trânsito (in-flight encryption).
                Os certificados tem uma data de expiração que você define e devem ser renovados regularmente para garantir que sejam autênticos

                Com o Load Balancer, o usuário faz a requisição ao LB via HTPPS, uma requisição criptografada.
                Após isso, o Load Balancer faz a requisição ao back-end via HTTP, contudo, continua sendo seguro pois passa pela VPC.
                
                O Load Balancer carrega um certificado X509, que é chamado de certificado de servidor SSL ou TLS.
                É possível gerenciar os certificados usando o ACM (AWS Certificate Manager).
                É possível carregar os próprios certificados para o ACM caso deseje
                Ao adicionar um ouvinte HTTPS, deve ser especificado um certificado padrão
                É possível habilitar uma policy security para suportar versões mais antigas de SSL e TLS.
                
            SNI
                Você pode oferecer uma lista de certificados opcionais para oferecer suporte a vários domínios para os ALB e NLB
                SNI (Server Name Indication) para especificar o Hostname baseado no certificado SSL/TLS.

        Connection Draining (CLB) / Deregistration Delay (ALB/NLB)
            A idéia por trás desse conceito é que isso dará algum tempo para que as instâncias concluam a solicitação em andamento
                Os usuários tem uma conexão com um tempo para conclui-las, após o tempo determinado, as conexões são fechadas
            Entre 1 e 3600 segundos
                Por padrão, é difinido 300s, contudo, você pode desativá-lo passando zero.
             
	Auto Scaling Groups
		
        Configura automaticamente o load balancer e inicia as instâncias pré-configuradas
		
        Dynamic Scaling Policies
            Simple / Step Scaling
                Aumenta ou diminui a quantidade de instâncias de forma automática baseado na configuração de um alarme
                    ex: Trigger de Alarme do CloudWatch com uso superior a 70% da CPU, adiciona duas instâncias.
                        Trigger de Alarme do CloudWatch com uso inferior a 30% da CPU, remove uma instância.
                        
            Target Tracking Scaling
                Ex: Quero que a média do uso da CPU das instâncias fique em torno de 40%. O ASG fará isso automaticamente
                
            Scheduled Scaling
                Escalonamento programado é quando vc sabe que em um determinado dia o número de acessos irá aumentar por um fator, e consequentemente quer que o n° de instâncias aumente
                    Ex: Quinta-feira terá um jogo importante de um campeonato e o sistema receberá muitas apostas. Sendo assim, nesse dia a partir das 17hrs o ASG criará mais 5 instâncias EC2
            
            Predictive Scaling
                Usa os padrões de tráfego da máquina para prever o que acontecerá com base nos padrões anteriores

