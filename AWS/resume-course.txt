Private cloud
	O provedor pode ser Rackspace
	
Public cloud
	Três provedores: Azure, Google Cloud e AWS
	
Hybrid Cloud
	Misutra de privado e publico / infra particular + aws
	
How can users access AWS?
	AWS Management Console (protected by password + MFA)
	AWS Command Line Interface (CLI): protected by access keys
	AWS Software Developer Kit (SDK) for code: protected by access keys

Types of Instance
    T2.Micro 
        T = Classe da Instância
        2 = Geração
        Micro = Tamanho, quanto maior, significa que a Instância terá mais RAM, CPU, etc...
    
    Memory Optimized = Instâncias para memória otimizada
        R6g
            R= RAM

        Existem R, X e Z    

    Storage Optimized = Instância utilizada ao acessar muitos conjuntos de dados no armazenamento local
        I3
        Existem D e H
	
IAM = Gerenciamento de identidade e acesso
	É possível criar grupos para uma organização.
	É possível ter um usuário em mais de um grupo
	Não é possível ter um grupo dentro de outro grupo
	É possível ter usuário sem grupo
		
	Policy
		É possível criar políticas
		É possível inserir políticas direto no usuário
		É possível inserir políticas no grupo de usuários e consequentemente os usuários do grupo terão essas políticas
		É possível adicionar políticas de senha e autenticação em conjunto com (MFA) Multi-factor authentication (outros dispositivos).
		
	Roles
		Funciona como permissões para serviços AWS
		ex: Uma instância do EC2 recebe uma IAM Role e tenta acessar alguma informação/serviço da AWS,
			essa instância usará a IAM Role como permissão. Caso esteja certo, terá acesso.
			
	Security Tools
		Access reports > Credential Reports = Extrai um relatório de credenciais no formato csv.
		Users > User > Access Advisor = Exibe todos os serviços utilizados pelo usuário e os que ele tem acesso mas não utiliza.
			OBS: Como na AWS trabalhamos com o princípio de menor privilégio, esse relatório nos permite retirar permissões não utilizadas por um usuário.
					
EC2 = Nuvem de computação Elástica
	É possível criar instâncias AWS configurando memória, processamento, etc...
		Uma das principais vantagens da nuvem, visto que se tivéssemos que fazer isso de maneira local, 
			o tempo seria muito superior para configurar um servidor.
	É considerado uma boa prática parar as instâncias enquanto não estiver utilizando.
	É considerado uma boa prática encerrar as instâncias caso não tenha mais utilidade, pois na nuvem tudo é descartável
	É possível criar backups antes de encerrar as instâncias.
	
	Classic ports to know
		22 = SSH (secure shell) - log into a Linux instance
		21 = FTP (File transfer protocol) - upload files using SSH
		22 = SFTP (Secure File Transfer Protocol) - upload files using SSH
		80 = HTTP - access unsecured websites
		443 = HTTPS - access secured websites
		3389 = RDP (Remote Desktop Protocol) - log into a Windows instance
	
	Grupo de Segurança (Security group) = é responsável por configurar os meios de conexões com o EC2.
		Ex: Caso a sua instância não tenha no grupo de segurança uma regra de entrada no protocolo HTTP,
			não será possível acessar a sua instância por um browser.
		É possível ter uma instância do EC2 com vários grupos de segurança, o resultado é a soma de todos eles.
		
	Elastic Block Store

		EBS Volume 
			É um volume específico para cada instância, podendo a instância estar vinculada a mais de um volume, ele pode ser utilizado para mais de uma, porém, nessa certificação isso não é considerado
			É possível ter um volume não vinculado a uma instância, pois ele não depende de uma instância para existir
			É possível manter o volume após o encerramento da instância, desmarcando a flag que é responsável por essa configuração.
			Nível gratuito: 30 GB de armazenamento EBS gratuito do tipo SSD ou SSD Magnético por mês
			É bloqueado por zona, se a zona da sua instância for X, o volume tem que ser criando na zona X para ser utilizado
			
		EBS Snapshot
			É um backup que pode ser realizado e utilizando como base para restaurar uma outra instância da mesma ou outra região.
			É possível criar um volume a partir do Snapshot realizado, para a mesma ou outra região.
			
	EC2 Image Builder
		É possível automatizar a criação de uma imagem com um sistema operacional, softwares desejados, rodar testes e criar instâncias automaticamente
		É possível fazer todo o fluxo acima porém criar a instância de forma manual.
		Deve-se atentar com a imagem que irá escolher pois algumas não são compatíveis com a instância t2.micro (gratuita)
		Deve-se atentar para fazer de forma manual pois a forma automática cria uma instância paga.
		
	EC2 Instance Store
		Tem um melhor desempenho para processamento input/output pois é diretamente no Hardware, porém é um armazenamento efêmero, onde você pode perder tudo ao parar a máquina.
		É uma boa utilizar para cache, dados temporários, buffer, conteúdos temporários.
		Não é uma boa utilizar para persistência de dados de longo prazo, como por ex um DB, use o EBS (Volume + Snapshot).
		Caso a instância falhe, o hardware também falhará
			
	AMI = Amazon Machine Image
		É possível criar uma AMI a partir de uma instância. Isso faz com que a instância iniciada a partir dessa AMI tenha todas as configurações já feitas
		
	EFS = Elastic File System
		Serviço Regional
		Só funciona com instâncias Linux EC2
		É possível utilizar o armazenamento em mais de uma região e em mais de uma instância ao mesmo tempo, diferente do EBS (Elastic Block Store)
		Ao utilizar o EFS, todas as instâncias de diferente zonas que usam o EFS, vão persistir e consumir os arquivos da mesma origem em tempo real.
		OBS: A EFS-IA tem um desconto de 92% comparada a Padrão pois quando utilizamos EFS-IA concordamos que não buscaremos os arquivos todos os dias, apenas eventualmente
		
	Amazon FSx
        Sistemas para gerenciamento de arquivos, caso não queira usar o S3 por exemplo.	
        Existem os seguintes FSx: FSx for Lustre, FSx for Windows File Server, FSx for NetApp ONTAP

    Escalabilidade 
        É a capacidade de um sistema acomodar uma carga maior, tornando o hardware mais forte ou ampliando, ou adicionando nós ampliados
        Vertical 
            Temos uma aplicação no t2.micro e alteramos para t2.large a fim de atender uma demanda maior
            Há um limite de escalonamento vertical, que é o limite do Hardware
        
    Elasticidade
        Horizontal
            Ao invés de aumentar o tamaho da instância, aumentamos a quantidade de instâncias para a aplicação
            Ao aumentar o número de instância, é considerado um escalonamento externo
            Ao diminuir o número de instância, é considerado um escalonamento
    
        High Availability (Alta disponibilidade)
            Vai de mãos dados com o dimensionamento horizontal
            Significa que vc está executando seu app em mais de uma zona de disponibilidade na AWS
            Ex: Call center em NY e Call Center em San Francisco
                Caso NY tenha um desastre, a operação de San Francisco não será afetada.
    
    Agilidade
        Os recursos estão a apenas um clique de distância. Ao invés de uma confugração nova demorar uma semana por ex, demora 10s.

        Alta disponibilidade e Escalabilidade para EC2

    Load Balancer
        Normalmente são mapeados 3 zonas diferentes com subredes a fim de ter uma disponibilidade maior.
        A configuração do servidor é feita pela AWS, porém é possível criar um Load Balancer, contudo, você será responsável pela configuração, manutenção, etc...
        Recebe uma solicitação e destibui conforme necessário. Caso uma instância esteja com problema, a solicitação será enviada a outra instância.        
        
        Application:
            Load Balancer somente para aplicações web, protocolo HTTP/HTTPS. = Camada 7
        
        Rede:
            Load Balancer somente para rede, protocolo TCP. = Camada 4
                Milhões de solicitações por segundo, Jogos, etc...
				
	Auto Scaling Groups
		Configura automaticamente o load balancer e inicia as instâncias pré-configuradas
		Simple / Step Scaling
			Aumenta ou diminui a quantidade de instâncias de forma automática baseado na configuração de um alarme
				ex: Alarme com uso superior a 70% da CPU, adiciona duas instâncias.
					Alarme com uso inferior a 30% da CPU, remove uma instância.
					
		Target Tracking Scaling
			Ex: Quero que a média do uso da CPU das instâncias fique em torno de 40%. O ASG fará isso automaticamente
			
		Scheduled Scaling
			Escalonamento programado é quando vc sabe que em um determinado dia o número de acessos irá aumentar por um fator, e consequentemente quer que o n° de instâncias aumente
				Ex: Quinta-feira terá um jogo importante de um campeonato e o sistema receberá muitas apostas. Sendo assim, nesse dia a partir das 17hrs o ASG criará mais 5 instâncias EC2
		
		Predictive Scaling
			Usa os padrões de tráfego da máquina para prever o que acontecerá com base nos padrões anteriores
			
Amazon S3
	É Global, mas ao criar um Bucket, você deve selecionar uma AZ.
	Pode ser utilizado para qualquer tipo de armazenamento.
	Alguns serviços da AWS utilizam o S3 para fazer armazenamento, como por exemplo o Snapshot do EC2, ele grava seu backup no EC3.
	Normalmente, o S3 é utilizado para guardar arquivos
	Qualquer tipo de arquivo no S3 é considerado um objeto
	O S3 trabalha com buckets, podendo ter subpastas. Porém, cada arquivo é considerado um objeto, sendo ignorado qualquer tipo de subpastas.
	
	Website
		Pode ser utilizado para sites estáticos, basta configurar o bucket.
	
	Server Access Logging
		É possível configurar um bucket para receber logs de um outro bucket.
		Isso ajuda a avaliar se estão tentando invadir uma aplicação, etc...
		
	Replication
		É obrigatório ativar o versionamento de ambos os buckets que farão parte da replicação
		É possível replicar um bucket para outro bucket, independente da AZ.
		A replicação é feita de maneira assíncrona, e um dos motivos para existir a replicação é abaixar a latência.
		 Ex: Se uma pessoa mora na Europa, faz mais sentido ela acessar aos arquivos de um bucket que esteja na Europa.
		     Caso ela more na América Latina, faz mais sentido ela acessar aos arquivos da respectiva AZ.
		
		Deve ser configurado ou criado uma Role para o S3 a fim de realizar a replicação.
		
	Durability and Avaliability
	
		Durabilidade
			Os objetos tem uma durabilidade de 99.99999999%, ou seja, se você tem 10mm objetos, você perderá um único objeto a cada 10 mil anos
		
		Disponibilidade
			Tempo que o serviço fica disponível
			O S3 é gratuito e deve ficar em média de 53 minutos off por ano, dependendo da class de armazenamento (Storage Class).
		
	Storage Classes
	
		É possível fazer a movimentação dos objetos entre as classes de armazenamento (storage classes)
			OBS: A movimentação pode ser automatizada usando a configuração de ciclo de vida.
	
		1° S3 Standard - General Purpose
			99.99% disponibilidade
			Usado para dados acessados com frenquência
			Baixa latência e alto rendimento
			Pode sustentar até duas falhas simultâneas nas instalações (Portanto, se houver problemas, seus dados ainda estarão seguros).
			Casos de Uso (Big data, app móveis e de jogos, distribuição constante)
		
		2° S3 Standard-Infrequent Access (IA)
			99.99% disponibilidade
			O custo é menor comparado ao Padrão do S3.
			É utilizado quando você quer ter acesso rápido aos seus arquivos, porém não os acessa constantemente.
			Pode sustentar até duas falhas
			Casos de uso (Armazenamento de dados para recuperação de desastres, backups para acessar imediatamente porém não acessados com frequência.)
		
		3° S3 One Zone-Infrequent Access (IA)
			Mesma regra do S3 Standard-Infrequent Access, porém é limitado apenas para uma zona.
			Tem 99.5% de disponibilidade
			Valor inferior em até 20% comparado ao S3 Standard-Infrequent Access
			Casos de uso (Backup secundário, dados que possam ser recriados)
		
		4° S3 Intelligent Tiering
			99.99% disponibilidade
			Mesma latência e rendimento do S3 Standard
			Custo otimizado visto que de forma automática os arquivos mais acessados e menos acessados serão movidos automaticamente para as categorias certas.
			Resistentes a eventos que afetarão uma AZ inteira
		
		5° Amazon Glacier e Amazon Glacier Deep Archive
			Utilizada para guardar backups para um longo tempo
			Existem várias opções de recuperação de tempo e taxas sempre que recuperar
		
			Amazon Glacier (Barato)
				Expedited (1 a 5 minutos)
				Standard (3 a 5 horas)
				Bulk (5 a 12 horas)
			
			Amazon Glacier Deep Archive
				É a opção de armazenamento mais barata da AWS
				Standard (12 horas)
				Bulk (48 horas)
				
	S3 Object Lock & Glacier Vault Lock
		
		Object Lock
			Adotado o modelo WORM (Write Once Read Many).
			Bloqueia a versão do objeto para não ser deletado ou modificado num período especificado.
		
		Glacier Vault Lock
			Adotado o modelo WORM (Write Once Read Many).
			Cria uma política de bloqueio e essa política impede futuras edições do arquivo 
			 OBS: A política é imutável, depois de configurada, ninguém poderá excluí-la.			 
			Casos de uso (Quando vc tem requisitos de conformidade e retenção de dados, ou seja, não quer perder de forma alguma um objeto - Auditoria)
	
	Criptografia
		
		Sem criptografia
			Não há criptografia em ambos os lados (cliente e servidor)
		
		Com criptografia no servidor
			O usuário não envia o arquivo criptografado, porém o servidor do bucket criptografa ao receber.
			
		Criptografia no lado do usuário
			A criptografa é feita tanto pelo usuário quanto pelo servidor.
			
			
	AWS Snow Family
	
		Snowcone
			Storage Capacity: 8 TB usable
			Migration Size: Up to 24tb, online and offline
			DataSync agent: Pre-Installed
			
		Snowball Edge Storage Optimized
			Storage Capacity: 80 TB usable
			Migration Size: Up to petabytes, offline
			Storage Clustering: Up to 15 nodes
			
		Snowmobile
			Storage Capacity: < 100 PB
			Migration Size: Up to exabytes, offline
			
	AWS Storage Cloud Native Options
		
		É uma forma de utilizar o local junto com a nuvem
		
		Block
			Usa o EBS e EC2 Instance Store
			
		File
			Usa o Amazon EFS
			
		Object
			Usa o S3 e Glacier

Databases & Analytics

	RDS & Aurora

		RDS
			É um serviço de banco de dados relacional utilizando a linguagem SQL para consultas
			Permite criar banco de dados na nuvem gerenciados pela AWS, sendo eles: Postgres, MySQL, MariaDB, Oracle, SQL Server e Aurora (AWS Proprietary database)

			OBS: 
				Aurora DB não é um banco de dados open source, é fornecido pela AWS, suporta os tipos (PostgreSQL e MYSQL)
				Benefícios ao usar Aurora: 
					É otimizado para a nuvem, tem um ganho de desempenho em 5x ao MySQL no RDS e 3x ao PostgreSQL no RDS
					Não temos que nos preocupar com armazenamento pois eles são aumentam de forma automática em incrementos de 10gb até 64tb.

				Malefícios: É 20% mais caro que o RDS, porém acaba valendo a pena por ser mais otimizado caso seu banco de dados seja MySQL ou PostgreSQL.
			
			Benefícios ao utilizar um RDS
				Provisionamento automático, manutenções no sistema operacional
				Backups contínuos podendo especificar um período para restaurar o banco
				Painéis de Monitoramento para ver como o Banco de Dados está
				Ler réplicas a fim de melhorar a performance
				Multi zonas a fim de estar pronto para ter um plano de recuperação em caso de desastre
				Configurar janelas de manutenção para atualizações
				Capacidade de Escalabilidade (Vertical e Horizontal)
				EBS Volume (gp2 ou io l)

			Malefícios
				Não é possível utilizar o SSH na instância

			Modos de Implementação:
			
				Réplicas de Leitua
					Caso o fluxo de leitura do banco seja grande, réplicas do BD para leituras são criadas a fim de não sobrecarregar o BD.
					Sendo assim, as réplicas serão utilizadas para leitura e o BD para persistência.
					Há um limite de 5 réplicas de leitura
				
				Multi-AZ
					A persistência e leitura serão feitas sempre no BD
					Será criado um Failover DB a fim de atender a demanda quando o DB falhar por algum motivo.
					O Failover DB fica numa AZ diferente, por isso é chamado de crozz AZ.
				
				Multi-Region
					São criadas réplicas de leitura para regiões diferentes do BD.
					A persistência será feita sempre no BD
					A leitura será feita baseada na região, o que melhora a latência visto que cada região acessará aos dados da sua região.
					Caso uma região falhe, outras regiões estarão ativas para receber as solicitações de leitura, e a operação terá sobrevivido ao desastre.
					Porém, tem um custo um pouco superior.
	
	ElastiCache

		Banco de dados para cache (memória).
		É útil quando a leitura no BD se torna um peso. Sendo assim, é interessante ter um banco de dados em memória.
		É possível utilizar o Redis ou Memcached		

	DynamoDB
		NoSQL
		Altamente disponível com replicação em três zonas de disponibilidade
		Um dos principais produtos da AWS
		Não tem servidor distribuído
		Latência de milissegundos de um dígito
		Integrado ao IAM
		Baixo custo e capacidade de escalonamento automático

	DynamoDB Accelerator - DAX
		Um cache em memória totalmente gerenciado para o DynamoDB
		Melhor desempenho em até 10 vezes
		Totalmente seguro, escalável e altamente disponível

	DynamoDB Global Tables
		É possível fazer uma replicação bidirecional de uma tabela global para outras AZ, então os dados que estiverem em uma AZ, estarão nas outras
			Sendo assim, a latência é menor, visto que os usuários acessarão as tabelas globais mais próximas ou de sua AZ.

	Redshift
		Baseado no PostgreSQL mas não é utilizado para OLTP (Processamento de transações online)
		É OLAP (Online analytical processing)
		Não carrega dados o tempo inteiro, normalmente é de hora em hora
		Bastante utilizado para análise de dados e fazer cálculos
	
	EMR
		Se encarrega de provisionar todas as instâncias do EC2 e configurá-las para que possam ser usadas juntas a partir de uma perspectiva de big data
		Elastic MapReduce
		EMR não é realmente um banco de dados, é utilizado para criar Cluster Hadoop a fim de fazer big data
		Possui escalonamento automático e está integrado a instâncias Spot
		Casos de uso: Machine learning, web indexing, big data, em geral...

	Amazon Athena
		Utilizado para fazer análise de dados
		Não contém servidor
		Utiliza SQL para buscar arquivos
		Casos de uso: Analisar dados inseridos no S3

	Amazon QuickSight
		Serviço para BI sem servior baseado em Machine Learning
		É possível utilizar em cima de um RDS e gerar gráficos interessantes para o usuário final
		É cobrado por tempo de sessão

	DocumentDB
		Banco de dados NoSQL da AWS, baseado no MongoDB
		Gerenciado pela AWS, replicado em 3 regiões
		O armazenamento aumenta automaticamente em 10gb até 64 TB.

	Neptune
		Banco de dados baseado em gráficos (semelhante a rede social)
		Disponível em 3 regiões, podendo gerar 5 réplicas de leitura
		Ótimo para aplicações que trabalham com dados conectados (semelhante a rede social), consultas complexas e difíceis otimizadas
		É possível guardar bilhões de relações e consultar com latência de milissegundos.
		Altamente disponível nas AZ.
		Ótimo para armazenar gráficos de conhecimento, ex: Wikipedia.

	Amazon QLDB (Quantum Ledger Databases)
		Funciona como um diário
		É ideal para cenários de transações, onde queremos ter certeza que não perdemos uma transação e que não houve nenhuma edição
		Disponível em 3 regiões.
		Performance 2/3 vezes melhor que frameworks blockchain, podendo utilizar SQL para consultas
		É centralizado na AWS, diferente do Blockchain que é descentralizado

	Managed Blockchain
		Não é centralizado numa autoridade confiável.
		É possível criar uma rede de blockchains pública ou privada escalável
		Compatível com os frameworks Hyperledger Fabric e Ethereum

	DMS (Database Migration Service)
		Pega os dados do DB, joga uma instância EC2 rodando no DMS e cria o DB de destino
		Não remove os dados de origem
		É inteligente o suficiente para fazer migração homogênea ou heterogêna (Oracle x Oracle | Oracle x Aurora Oracle)

	Glue
		Utilizado para extração, transformação e carregamento de serviços ETL
		Prepara e transforma dados para análise
		Serviço sem servidor
		Casos de Uso: Recebe dados do S3 e RDS, transforma os dados e carregada para o Redshift

	Glue Data Catalog
		Catalogo de datasets
		Pode ser utilizado por Athena, Redshift, EMR...

Other Compute Services: ECS, Lambda, Batch, Lightsail

	ECS (Elastic Container Service)
		Rodando o docker no EC2.

	Fargate
		Não tem servidor diretamente
		Roda um container diretamente no Fargate, sem precisar configurar um servidor, como no ECS

	ECR (Elastic Container Registry)
		Local onde registramos as imagens do docker que podem ser rodadas tanto no ECS quanto no Fargate

	Serveless
		Aplicações "sem servidor".
		Significa que você não tem que configurar ou se preocupar com o servidor.
		Ex de aplicações Serveless: DynamoDB, S3, Fargate, Lambda

	Lambda
		Não há servidores para gerenciar (Serveless)
		Limitado por tempo (Pequenas execuções)
		Roda sobre demanda (Estará disponível sempre que precisarmos)
		Escalonamento automático

		Benefícios
			Paga por requisição e tempo de computação
				Versão livre tem 1,000,000 de requisições AWS Lambda e 400,000 GBs de tempo de computação
			Integrado com muitos serviços da AWS
			Dirigido a eventos, funções invocarão os eventos na AWS quando precisarem
			Integrado com muitas linguagens de programação
			Fácil monitoramento com AWS CloudWatch
			Facilidade para buscar mais recursos para as funções, como por ex aumentar 10GB de RAM

	Lambda Container Image
		É possível rodar um container Docker no Lambda, contanto que tenha o Runtime API Lambda.
			(É melhor utilizar o ECS e Fargate para isso, pois não necessita do Runtime API Lambda)

	Amazon API Getway
		É um serviço que permite criar, publicar, monitorar APIs Serveless
		Totalmente escalável
		Suporte a APIs RESTful e WebSocket
		Suporte para segurança, autenticação, limitação de API, chaves de API, etc...

	Batch
		Serviço Regional
		Cria instâncias EC2 automaticamente de acordo com o processamento que você precisa para o lote
		Não tem limite de tempo para rodar (Diferente da Lambda, que tem um limite de 15 minutos para processar)
		Tem capacidade de armazenamento EBS ou instância com espaço em disco
		As instâncias são geradas pela AWS e configuradas por ela, não há de se preocupar com escalonamento automático por exemplo

	Amazon Lightsail
		Serviço recomendado para quem tem pouca experiência, pouca vontade de entender como a AWS funciona e pouco tempo para aprender
		Contém alta disponibilidade porém não tem escalonamento automático
		Ótimo preço
		Limitado nas integrações com outros serviços AWS
		Casos de uso
			Aplicações simples e websites
			Ambiente Dev / Teste
		
Deploying and Managing Infrastructure at Scale Section

	CloudFormation
		Será utilizado quando tivermos arquitetura em diferentes ambientes, regiões, ou até mesmo diferentes contas na AWS
		É utilizado para configurar toda a infraestrutura por código ao invés de utilizar o painel da AWS.
		Através dele, é possível configurar security group, load balancer, auto scaling, instâncias de banco de dados de forma automática
		É inteligente o suficiente para saber qual ordem irá criar, e faz o vínculo de todos os serviços

	CDK (AWS Cloud Development Kit)
		Utilizado para quem não gosta de escrever no CloudFormation pois é YAML, no CDK, pode escrever o código em diversas linguagens de programação
		Após escrever o código na linguagem específica, o CDK compila para YAML ou JSON.		

	Elastic Beanstalk
		Focado em aplicações web
		É uma visão centrada no desenvolvedor
		É voltado somente para o código, PaaS e não IaaS
		Tem suporte para várias linguagens de programação
		Com ele você cria tudo o que criaria com o CloudFormation (Grupo de escalonamento automático, RDS, Load Balancer, EC2, ElastiCache)
	
	CodeDeploy
		Responsável por atualizar a versão de uma aplicação seja on-premises ou cloud.
		É considerado um serviço Híbrido e independente
		É possível trabalhar com Instâncias EC2
		É possível trabalhar com servidores on-premises, porém é necessário provisioná-los com antecedência.

	CodeCommit
		É um serviço de controle de versões baseado no Git
		Totalmente gerenciado, escalável, automaticamente versionado, privado, seguro e integrado a AWS
	
	CodeBuild
		Responsável por buildar, rodar testes e se estive tudo certo, mandar para o Deploy (CodeDeploy).
		Benefícios
			Serveless
			Totalmente gerenciado
			Pagamento pré pago (Paga somente o tempo que utilizar)

	CodePipeline
		Base para CICD (Continuos Integration e Continuos Delivery)
		Responsável por orquestrar o pipeline (CodeCommit > CodeBuild > CodeDeploy > Elastic Beanstalk)
		Integrado com GitHub e plugins customizados

	CodeArtifact
		Responsável por guardar dependências da aplicação e gerenciar artefatos
		É possível utilizar ferramentas como Maven, Gradle, npm, yarn, twine, pip e NuGet.
		Benefícios
			Ao invés de ter que configurar toda a sua infraestrutura de dependências numa instância EC2 por exemplo, você pode utilizar o CodeArtifact.

	CodeStar
		Interface unificada para gerencionamento de software num único lugar.
		É possível iniciar rapidamente e configurar todas as etapas de CI/CD.
	
	Cloud9
		IDE para desenvolvimento em nuvem
		Não pode ser baixado e instalado, o acesso é no browser
		Pode ser utilizada para fazer pair programming

	SSM (System Manager)
		Gerenciador de sistemas para obter insights operacionais sobre o estado da sua infraestrutura e também tenha acesso a um conjunto com mais de 10 produtos
		Cloud Hibrid
		Multiplataforma (Windows e Linux)
		Principais Produtos
			Patches automáticos em todos os servidores
			Executar um comando em toda a frota de servidores diretamente
	
	OpsWorks
		Chef and Puppet

AWS Global Infrastructure

	Route 53
		É um DNS (Domain Name System) gerenciado
		O browser faz uma requisição http, porém antes de chegar no servidor, o DNS chega no Route53, que retorna o IP correto para a aplicação
			Após isso, a requisição é feita no servidor correto.
		Políticas de Roteamento
			
			Política de Roteamento simples
				Não possui verificações de saúde
				O browser faz uma requisição e o DNS chega no Route53 e retorna o ip correto
			
			Política de roteamento ponderado
				Permite distribuir o tráfego em várias instâncias EC2
				Há verificações de saúde

			Política de roteamento de Latência
				Havendo uma aplicação global (Com no mínimo duas instâncias), o Route53 encaminhará o usuário para o servidor mais próximo a fim de diminuir a latência

			Política de Roteamento de Failover
				Havendo uma requisição, o Route53 validará a saúde da instância primária, caso não esteja ok, redirecionará a requisição para a instância de Failover.

	CloudFront (CDN)
		Contém pontos de presença a fim de guardar cache de uma instância, site estático, objetos no S3, etc...
		Ao receber uma solicitação HTTP, caso o ponto de presença não contenha aquela informação no cache, buscará no destino.
		 Antes da resposta voltar ao usuário, o CloudFront guardará essa informação no cache.

	S3 Transfer Acceleration
		Realiza uma transferência de objetos mais rápida (Upload e Download)
		Ex: Um usuário faz um upload de um obj para um bucket que está na Austrália. O Ponto de presença dos EUA recebe esse arquivo e envia para a Austrália de maneira muito mais rápida.

	AWS Global Accelerator
		Realiza requisições de maneira mais rápida utilizando a rede da AWS privada
		O usuário faz uma requisição numa AZ qualquer, que chega até o ponto de presença na rede pública, ao chegar no ponto de presença é encaminhado para o servidor pela rede da AWS privada.
		Só é possível acessar a aplicação por meio do ip estático
	
	AWS Outposts
		A Aws fornece um servidor para você deixar no seu próprio data center
			A diferença é que você será responsável por ele em termos de segurança, etc...
		Ele será totalmente gerenciado (Pela AWS), e você pode utilizar serviços como EC2, S3, EBS, RDS
	
	AWS WaveLenght
		A finalidade do WaveLenght é fornecer latência ultrabaixa para aplicativos por meio de redes 5G.
	
	AWS Local Zones *Atention*
		É possível habilitar zonas locais dependendo da Região.
			Consequentemente, criar sub redes para a az e criar uma instância para essa az.
			Sendo assim, o usuário dessa zona local terá uma latência muito baixa.

	Global Applications Architecture
		
		Single Region, Single AZ
			Pequena disponibilidade
			Latência global alta
			Fácil de configurar

		Single Region, Multi AZ
			Boa disponibilidade
			Latência global alta
			Pequena dificuldade para configurar

		Multi Region, Active-Passive
			Active = Recebe persitência e leitura
			Passive = Instâncias que recebem somente leitura, porém em todas as regiões

			Boa disponibilidade
			Latência global alta, pois precisam persistir numa única região
			Dificuldade para configurar

		Multi Region, Active-Active
			Active = Recebe persitência e leitura
			Boa disponibilidade
			Latência global baixa, pois há instâncias nas regiões mundiais
			Alta Dificuldade para configurar

Cloud Integrations

	SQS (Simple Queue Service)
		É um serviço de mensageria, como o RabbitMQ
		A mensagem deve ser processada entre 4 e 14 dias e depois devem ser excluídas
		Os consumidores recebem somente mensagens não consumidas e que não estão em execução por outros consumidores
		É Serveless
	
	SNS (Serviço de Notificação Simples)
		Pub / Sub
		É capaz de receber uma mensagem e disparar para vários destinos
		Ex: Recebo uma mensagem e quero enviar para algumas aplicações e para a fila no SQS, ao invés de fazer isso via código
				Utilizo o SNS, ele recebe a mensagem e faz isso automaticamente.
		Todos os consumidores recebem todas as mensagens

	Kinesis
		É igual a um streaming de big data em tempo real
		Kinesis Data Streams
			Um serviço de baixa latência para ingeri-lo em escala de centenas de milhares de fontes, e a fonte pode ser qualquer coisa que possa produzir dados
				Ex: Caminhão, Barco, Dispositivo IOT.
		
		Kinesis Data
			Carrega os Streams nos serviços da AWS (S3, Redshift, ElasticSearch)

		Kinesis Data Analytics
			Realiza análise em tempo real no stream usando a linguagem SQL.

		Kinesis Video Streams
			Monitora streams de vídeo em tempo real para análise ou aprendizado de máquina

	Amazon MQ
		Serve para migrar serviços de mensageria para nuvem sem ter que usar o SQS ou SNS, pois utilizam protocolos diferentes do que por ex RabbitMQ(AMQP)
		Possui suporte para protocolos como AMQP, MQTT, STOMP, Openwire, WSS
		Gerencia o Apache ActiveMQ, que possui protocolos ativados por padrão
		Não é serveless

Cloud Monitoring

	CloudWatch
		 

	CloudWatch Metrics
		Há a possibilidade de visualizar métricas de diversos tipos de serviços da AWS que você utiliza
		A métrica de gastos totais com a AWS só é possível utilizar nos EUA, porém, nas outras regiões há como saber o faturamento total menos detalhado
		É possível configurar uma métrica caso você não encontre uma para o fim desejado.

	CloudWatch Alarms
		Usado para disparar notificações para qualquer métrica
			Ex: A métrica de EC2 passou do limite, o auto-scaling group aumenta ou diminui o número de instâncias.
		Disparar notificação para o e-mail utilizando SNS
			Ex: A instância EC2 passou de 90% de uso, desejo saber o motivo. o CloudWatch Alarms enviará para o SNS, que enviará o e-mail.

		Status
			OK = bom
			Insufficient_data = Quando não há dados suficientes para descobrir se deve ser bom ou ruim
			Alarm = ruim

	CloudWatch Logs
		É possível recolher logs de várias integrações da AWS (Elastic Beanstalk, ECS, AWS Lambda, CloudTrail, Route53)
		Para utilizar com o EC2, é necessário instalar o Agente na máquina, e ele enviará direto para o CloudWatch Logs
		Também é possível configurar o agente de log no servidor on premise

	CloudWatch Events
		É possível configurar Jobs como no SQL Server, onde num determinado horário/dia o job chama uma função Lambda
		É possível configurar uma regra e enviar notificações usando SNS
			Ex: Ao término de uma instância EC2, notifique o e-mail test@example.com
		É possível criar trigger como no SQL, e enviar mensagens usando SQS, SNS...
	
	Amazon EventBridge
		A nova evolução do CloudWatch Events
		Barramento de evento padrão
		Partner event bus: receber eventos de parceiros SasS, ou aplicações (Zendesk, DataDog, Segment, Auth0)
		Pode criar um serviço buses

	CloudTrail
		Utilizado para governança na AWS
		É possível ver todas as ações feitas por usuários em todos os serviços

	X-Ray
		É útil para analisar como aplicações em microsserviços estão funcionando, pois é difícil debugar e identificar falhas em aplicações baseadas em microsserviços
			Sendo assim, o X-Ray mostra um gráfico das aplicações em conjunto
	
	CodeGuru
		Maneira para automatizar Code reviews e recomendações de performance para aplicações
		Contém duas funcionalidades
			1: Code Guru Review - Fazer revisões de código automtizados com análise estática de código
			2: Code Guru Profiler - Dar visibilidade ou recomendações sobre o desempenho do app durante o tempo de execução
	
	Service Health
		Site da Amazon que exibe as disponibilidade dos serviços e as regiões

	Personal Health Dashboard
		Painel completo com informações sobre os serviços que eu estou utilizando
		Contém logs e informa melhorias baseado nos acontecimentos de cada serviço
	
VPC e Networking

	VPC, Subnet, Internet Gateway & NAT Gateways
		VPC é uma nuvem virtual privada
		Subnet 
		Internet Gateway é utilizado para fazer a conexão de uma subnet pública com a Internet
		NAT Gateway é utilizado para fazer a conexão de uma subnet privada com a internet a fim de realizar operações como por ex atualizar um sistema operacional
			Deve confirurar na subnet pública e criar uma rota para o NET Getway

	Grupos de segurança e lista de controle de acesso à rede
		NACL
			Controle de tráfego na subnet
			É atachado no nível do subnet
			Regras somente para IP

		Security Groups
			Está no nível de instância
			Controla o tráfego do ENI (Interface de rede) ou EC2
			Pode escrever regras de permissão
			Fazem referência a IP's e grupos de segurança

	VPC Flow Logs 
		Captura informações sobre o tráfego do IP nas interfaces
		
	VPC Peering
		Faz conexão entre VPC's usando a net da AWS

	VPC Endpoints
		Quando a subnet é privada e temos uma instância EC2, é possível configurar uma VPC Ednpoint Gatway para acessar serviços como S3 e DynamoDB
	
	Site to Site VPN
		Conecta um on-premises VPN na AWS
		A conexão é criptografada automaticamente
		Utiliza internete pública

	Direct Connect
		Estável e física conexão entre on-premises e AWS
		Conexão privada, segura e rápida
		Rede privada
		Demora cerca de um mês para estabelecer a conexão

	Transit Getway
		Uma maneira de conectar centas ou milhares de VPC juntos com infraestrutura local

Security e Compliance

	DDOS Protection

		AWS Shield Standard
			Protege seus servidores de ataques DDOS, esse serviço é gratuito
				Caso você queira um que proteja seu servidor 24 horas, deve usar o AWS Shield Advanced ($3.000 por mês por organização)
		
		AWS WAF
			Protege a aplicação contra ataque web exploits (Layer 7 - HTTP)
			Filtra solicitações específicas com base em regras, este é o firewall de aplicativo web
			É possível definir controle de acesso
			É possível bloquear lugares usando geolocalização
			É possível bloquear usuários que tentam fazer mais de x requisições por segundo

	Data at rest vs. Data in Transit

		Data at rest
			Dados guardados em algum local físico, como por exemplo Disco rígido, numa instância RDS, S3 Glacier Deep Archive
		
		Data in Transit
			Dados transferidos na rede, quando são movidos de um lugar para o outro
				ex: transferidos do On-premises para a AWS, EC2 para o DynamoDB, etc...
		
		AWS KMS (Key Management Service)
			O tipo de criptografia utilizado na AWS
			Pode ser utilizado no EBS, S3, Redshift, RDS, EFS
			Habilitado automaticamente no serviços: CloudTrail Logs, S3 Glacier, Storage Gateway

		CloudHSM
			Um aparelho que a AWS fornece onde você configura e define as chaves

		Tipos de CMK
			
			Customer Managed CMK
				Criado, gerenciado e usado pelo cliente
				Há a possibilidade de rotação da chave através de políticas
			
			AWS Managed CMK
				Criado, gerenciado e usado pela AWS
				Utilizado nos serviços como: S3, EBS, Redshift

			AWS Owned CMK
				Coleção de CMKs dos serviços da AWS e gerenciado por múltiplas contas
				AWS pode usar para proteger recursos na sua conta, porém, não é possível ver as chaves

			CloudHSM Keys (Custom keystore)
				Chaves geradas pelo próprio dispositivo de hardware CloudHSM
				Todas as operações criptográficas não acontecem dentro do KMS, elas acontecem no cluster HSM da nuvem

		AWS Certificate Manager (ACM)
			Provisiona, gerencia e aplica Certificados SSL/TLS
			Usado para providenciar HTTPS aos websites
			Oferece suporte a certificados TLS públicos e privados
			
		Secrets Manager
			Gerenciador de segredos
			É possível utilizá-lo para criar senhas para usuários do RDS e rotacioná-las depois de 90 dias por exemplo
			É possível utilizar para guardar segredos como por ex alguma chave que não deve ser exibida numa API
		
		AWS Artifact (Não é um serviço)
			É possível baixar relatórios e acordos da conta AWS.

		Amazon GuardDuty
			Procura problemas de vulnerabilidade nas suas aplicações e pode usar o CloudWatch para executar funções lambdas ou enviar SNS

		Inspector
			Um agente que pode ser instalado nas instâncias EC2, que procurará por problemas de vulnerabilidade existentes e por fim te dará um relatório com ou não essas vulnerabilidade

		-Config
			Ajuda a auditar
			Ajuda a gravar configurações e mudanças em todo tempo
			Possibidade de histórico da configuração de dados no S3, analisados por Athena posteriormente
			Exibe erros de configuração de SSH por exemplo

		Macie
			Serviço de privacidade de dados e segurança totalmente gerenciado que usará o machine learning e padrões de correspondência
				para descobrir e proteger dados confidencias na AWS.
			Notifica sobre dados de identificação (PII)

		Security Hub
			Segurança central, que configura todas as demais seguranças da conta
		
		Amazon Detective
			Analisa, investiga um potencial de seguraça ou atividades suspeitas
		
Machine learning

	Rekognition
		Utilizado para identificar pessoas, objetos, textos, imagens e vídeos usando ML
		Análise facial e reconhecimento facil de celebridades
		Casos de uso
			Moderação de conteúdo
			Detecção de textos
			Detecção e análise de rostos (sexo, idade, emoções)
			Pesquisa e verificação de rosto
			Análise de jogos de futebol

	Transcribe
		Utilizado para converter áudios em textos
		Casos de uso:
			Transcrever uma ligação para um cliente
			Automatizar legendas e legendas ocultas
			Gerar metadados para ativos de mídia para criar um arquivo totalmente pesquisável
	
	Polly
		Oposto do transcribe, ele recebe uma mensagem de texto e converte em áudio
			Isso permite a criação de aplicativos que utilizam fala, como por ex o Duolingo
	
	Translate
		Traduz textos para outros idiomas

	Lex + Connect
		Lex
			Reconhecimento automático de fala (ASR) para converter em texto
			Contém entendimento da Linguagem natural para transformar a intenção da fala em texto
			Ajuda a construir chatbots, call center bots
		
		Connect
			Recebe chamada, cria fluxo de contato e é baseado em nuvem
			Pode interagir com sistemas CRM ou AWS
			80% mais barato que as soluções tradicionais para central de contato

		Como funcionam 
			Uma ligação é feita para um número configurado no Connect, que passa as informações para o Lex,
				 que entende o que o usuário quer dizer, ex: "Agendar reunião com o Tom amanhã às 15 horas".
				 Após isso, o Lex invoca uma função lambda que faz a integração com o CRM agendando a reunião por ex.
	
	Amazon Comprehend
		NLP = Natural Language Processing
		Serveless
		Entende a linguagem do texto
		Pode extrair frases-chave, lugares, pessoas, marcas ou eventos dos textos.
		Entende o quão positivo ou negativo é o seu texto
		Pode analisar um texto usando tokenização e classes gramaticais (Também possui áudio)
		Pode organizar uma coleção de arquivos de texto por tópico e localizar os próprios tópicos

		Casos de uso: Analisar interações de e-mails de clientes para saber se a experiência deles estão positivas ou negativas
	
	SageMaker
		Totalmente gerenciado para desenvolvedores e cientistas de dados para criar modelos de aprendizado de máquina
		Ajuda a construir todas as etapas para um aprendizado de máquina entrar em produção
	
	Forecast
		Utilizado para previsões
		Totalmente gerenciado usando ML para entregar previsões difíceis
			Ex: Vendas futuras
		50% mais rápdio do que olhando os dados
		Reduz o tempo da análise de meses para horas
		Casos de uso:
			Planejamento financeiro
			Planejamento de demandas do produto
			Planejamento de recursos

	Kendra
		Serviço para pesquisar documentos
		É totalmente gerenciado e utiliza ML
		É possível extrair respostas de documentos de diversas extensões
		É alimentado também por interações e feedbacks dos usuários

		Como funciona:
			O usuário faz uma pergunta e o Kendra responde baseado na base de dados que ele tem.

	Personalize
		Serviço para criar recomendações personalizadas
		Funciona como a Amazon faz ao te enviar notificações sobre produtos que você talvez tenha interesse, pois você já pesquisou ou compra produtos da mesma categoria
		Ex: Sites e apps para serem instalados baseados nos que você já tem ou pesquisou
			Envia sms
			Envia e-mail
		
Account Management, Billing e Support

	Organizations
		Serviço Global
		Gerencia múltiplas contas AWS
		Tem uma conta master (Responsável pelos pagamentos)
		Tem mais descontos pois os gastos são consolidados
		Há uma API disponível para criação de contas de forma automática
		É possível restringir os privilégios da conta usando uma Política de Controle de Serviço (SCP)
		É possível criar contas por departamento, centros de custo, ambiente dev, test, prod
		Multi contas ou uma conta com multi VPC
		É possível usar padrão de Tag em todas as contas para fins de faturamento
		Você deve habilitar o CloudTrail em todas as contas, que enviarão logs para uma conta S3 central
		Você deve enviar todos os logs para uma conta de registro central
		O Mestre da organização tem controle sobre as demais contas

		Política controlada de Serviços (SCP)
			Permite colocar na lista de permissões ou na lista negra ações de IAM
				que podem ser aplicadas na unidade organizacional (OU) ou nível da conta.
				Porém, não se aplica às contas master
			As políticas podem ser aplicadas somente aos usuários e às funções das contas (menos as contas root). 

		Consolidated Billing (Faturamento Consolidado)
			Ao habilitar essa configuração, duas coisas são fornecidas

				1- Dá a você o uso combinado
					Significa que você pode combinar todo o uso de todas as contas para fazer duas coisas
						Compartilhar preço do Volume, Instâncias reservadas e planos de descontos
				
				2- Recebe somente uma fatura com o valor de todas as UO. O que ajuda no DP de contabilidade
		
		Control Tower
			Automatizar a configuração dos ambientes com apens alguns cliques
			Automatizar o gerenciamento contínuo de políticas usando grades de proteção
			Detectar violação de políticas e corrigí-las 
			Pode monitorar a conformidade por meio de um dashboard interativo
			
			A torre de controle está sendo executada no topo das organizações
				Isso significa que ele configurará organizações automaticamente para você organizar contas e 
					implementará políticas de controle de serviço

		Pricing Models of the Cloud
			Existem 4 modelos de preços na AWS
				1- Pay as you go: Pague pelo que você usa
				2- Save when you reserve: Reservar recursos como por ex instâncias EC2 reservadas.
				3- Pay less by using more: Quanto mais usa, mais desconto tem
				4- Pay less as AWS grows: Conforme a AWS cresce e pessoas utilizam ela, o custo dela diminui e consequentemente o seu desconto aumenta

		Savings Plan
			Plano de economia EC2:
				Dará até 72% de desconto comparado ao preço sob demanda do EC2

			Plano de Economia de Computação:
				Dará até 66% de desconto comparado ao preço sob demanda
				Opções de Computação: EC2, Fargate e Lambda
			
		AWS Compute Optimizer
			Ajuda a identificar possíveis reduções de custos
		
		Billing e Costing Tools
			1- Estimar o custo na nuvem
				Pricing Calculator, antigo TCO Calculator
				Calculadora Mensal Simples ou a Calculadora de preços
			
			2- Acompanhamento de custo na nuvem
				Billing Dashboard
				Tags de alocação de custos
				Relatórios de Custo e Uso
				Explorador de custos

			3- Monitoramento dos planos de custo
				
		TCO Calculators/Pricing Calculator (Custo total de propriedade)
			Fornece um relatório comparando o valor que você investiria no on-premises e quanto custaria o mesmo na Nuvem (Especialmente na AWS)
			Foi descontinuada em junho de 2020, a partir dessa data, a calculadora é a Pricing Calculator

			Pricing Calculator
				Estima o valor que você usaria em toda a sua arquitetura
				Ele calcula e exibe o quanto você gastaria em 12 meses e quanto seria caso você reservasse
		
		Tracking Costs in the Cloud (Rastreando custo na nuvem)
			
			Billing Dashboard
				Exibe todos os custos do mês, a previsão do mês inteiro

			AWS Free Tier Dashboard
				Painel de nível gratuito que exibe o uso de cada nível gratuito com base no que você fez durante o mês

			Cost Allocation Tags (revisar)
				É possível criar departamentos utilizando tags, isso ajudará a ter relatório específico de cada departamento
				Agrupa os recursos e garante que seja possível rastrear as tags de acordo com uma categoria especial

			Cost and Usage Reports
				Exibirá todos os custos de forma mais granular possível
				Pode ser analisado por Athena, Redshift ou QuickSight
				
			Cost Explorer
				Relatório de alto nível, bem detalhado onde você pode criar relatórios customizados e usar dados
				Dá sugestões de economia, como por exemplo informar sobre o uso de instância reservada
				(Questão de exame) Você pode prever o uso em até 12 meses com base no uso do mês anterior
			
			Billing Alarms e AWS Budgets

				Existe o CloudWatch Alarms, para configurar um alarme quando o valor atual passa do valor definido na métrica, porém ele não é tão poderoso, embora importante.

				Billing Alarms
				 Só pode ser criado no us-east-1 e permitem que você rastreie o faturamento geral e por serviço

				AWS Budgets
					Envia alarmes quando o orçamento ou a previsão do orçamento excede o orçamento
					Podem ser criados 3 tipos de orçamentos.
						1- Orçamento por uso
						2- Orçamento por custo
						3- Orçamento por reserva
							Para instâncias reservadas, podemos rastrear a utilização deles
							Suporta instâncias reservadas EC2, instâncias reservadas ElastiCache, RDS, Redshift
							Suporta até 5 notificações SNS por orçamento para que possamos enviar e-mails, acionando funções e assim por diante
							Podemos filtrar por serviço, conta vinculada, tags, opção de compra, tipo de instância, região, AZ, API Operation, etc...
							Obtém as mesmas opções do AWS Cost Explorer
							Os dois primeiros orçamentos serão gratuitos, após isso, pagará $0.02 por dia por orçamento.

	-----------------------------------IMPORTANTE-------------------------------------------
			AWS Trusted Advisor
				É totalmente em alto nível
				Executa uma série de verificações e diz se elas passaram ou não
				Ele analisa a conta a fornece recomendações sobre cinco categorias
					1- Cost optmization (Otimização de custos)
					2- Performance 
					3- Security (Segurança)
					4- Fault tolerance (Tolerança a falhas)
					5- Service Limits (Limites de serviço)

				Trusted Advisor Support Plans
					
					7 core cheks (Basic e Developers Support Plan)
						S3 - Permissões de Bucket, se é público, etc...
						Security Groups - Se há portas irrestritas
						IAM Use (Pelo menos 1 usuário)
						MFA on Root Account
						EBS Public Snapshot
						RDS Public Snapshot
						Service Limits

					Full Checks (Business e Enterprise Support Plan)
						Verificará todas as 5 categorias
						Habilitar os alarms do CloudWatch ao atingir os Limites
						Obtém acesso programático usando a AWS Support API

				Support Plans Pricing
					Basic suport: Free (Suporte básico: gratuito)
						Documentação, fórums, 24 horas x 7 dias por semana de serviço ao cliente
						AWS Trusted Advisor = 7 recursos
						AWS Personal Health Dashboard = Dashboard que informa sobre atualizações de serviços AWS e alerta quando seus recursos podem ser impactados

					Developer
						Básico + Acesso ao e-mail no horário comercial para o Cloud Support Associates
						Há a possibilidade de abrir chamados de suporte no Console
						Quantidade ilimitada e um contato principal em suas contas
						Respostas diferentes com base na gravidade dos casos
							Orientação geral: < 24 horas úteis
							Sistema prejudicado: < 12 horas úteis

					Business
						Conjunto completo para o Trusted Advisor e também acesso à API
						24/7 por telefone, e-mail e bate-papo ao Cloud
						Casos e contatos ilimitados
						Acesso ao gerenciamento de eventos de infraestrutura por uma taxa adicional
						Casos severos:
							Orientação geral: < 24 horas úteis
							Sistema prejudicado: < 12 horas úteis
							Sistema de produção prejudicado: < 4 horas
							Sistema de produção fora do ar: < 1 hora

					Enterprise
						Concierge = time composto de expert em aws billing
						Contém todos os serviços anteriores além de um Gerente Técnico de Conta dedicado, também chamado (TAM = Technical Account Manager)
						Receberá uma equipe de suporte considerada que fornecerá os detalhes e recomendações sobre as melhores práticas de faturamento e contas
						Acesso ao gerenciamento de eventos de infraestrutura, análises bem-arquitetadas (Well-Architected) e de operações.
						Casos severos:
							Orientação geral: < 24 horas úteis
							Sistema prejudicado: < 12 horas úteis
							Sistema de produção prejudicado: < 4 horas
							Sistema de produção fora do ar: < 1 hora		
							Sistema crítico para os negócios inativo: < 15 minutos

Advanced Identity
	
	Security Token Service (STS)
		Habilita a criação temporária, limitada de credenciais de acesso dos seus recursos AWS.
		É possível configurar o tempo de expiração das credenciais
		Casos de uso:
			Identity Federation (Federação de identidade) para gerenciar suas identidades em sistemas externos
				e fornecer tokens STS para acessar recursos da AWS 
			Funções de IAM, for cross/same account access (Acesso para acesso cruzado ou na mesma conta)
			Providenciar credenciais temporárias para instâncias EC2 a fim de acessar recursos AWS.
		
	Cognito
		É uma forma de fornecer identidade aos usuários de aplicativos móveis e da web
		Há um banco de dados de usuários específicos para o Amazon Cognito, onde as aplicações farão o login apontando para esse banco de dados
		Permite utilizar login com redes sociais como Facebook, Twitter, etc...
	
	Directory Services
		É usado sempre que há um Active Directory

	AWS Single Sign-ON (SSO)
		A idéia é ter um login que possa acessar várias contas ou aplicativos de negócios de terceiros
		Suporta SAML 2.0
		Integrado ao Active Directory Local

Other Services

	WorkSpaces
		Desktops virtuais ou gerenciar desktops virtuais como serviço
		Como minimizar latência para espaços de trabalho?
			Implementando workspaces próximos dos usuários.
			Ex: Corporate Officer (California) = Workspaces em N.Virginia (us-east-1)
				Corporate Officer (Paris) = Workspaces em London (eu-west-2)

	AppStream 2.0
		É um serviço de streaming de aplicativos desktop
		A ideia é transmitir um aplicativo para qualquer computador sem adquirir e provisionar infraestrutura
		O aplicativo estará acessível e entregue a partir de um navegador web
		Há a possibilidade de configurar instância para cada aplicativo em específico.
			Ex: Para o Photoshop, preciso de x CPU, RAM e CPU.

	Sumerian
		Usado para criar realidade virtual (VR virtual reality) ou realidade aumentada (AR augmented reality) e aplicações 3D

	IoT Core
		 Permite integrar aplicativos IoT com a nuvem
		 Integra com muitos serviços AWS, como por exemplo: S3, Lambda, SageMaker
		 Há a possibilidade de criar aplicativos IoT

	Elastic Transcoder
		Usado para converter arquivos de mídias armazenados no S3 em arquivos de mídia no formado exigido
			Ex: Inpute um vídeo no S3, o Transcoding pipeline  irá converter o vídeo em vários arquivos de vídeo diferentes que serão
				colocados em um depósito S3 de saída. Que poderá ser consumido por diversos dispositivos como Tablets, Smartphones, PCs...
	
	Device Farm
		Utilizado para testar aplicações sem browsers, telefones e tablets
		São dispositivos físicos e reais
		Podem ser configurados como por exemplo: GPS, Idioma, Wi-Fi, Bluetooth, etc...

	Backup
		Serviço para gerenciar e automatizar centralmente os backups nos serviços AWS
		Obtém backups sobre demanda e programados
		Oferece suporte para recuperação pontual (PITR Point-in-time Recovery)
		É possível definir o período de retenção, o gerenciamento de ciclos de vida, as políticas de backup, etc...
		É possível fazer backups por regiões ou até mesmo backups entre contas com o respaldo de qualquer uma das organizações da AWS
	
	Disaster Recovery Strategies
		Backup and restore = Em caso de desastre, fazemos restauração do servidor para a nuvem. (O mais barato).
		Pilot Light = As principais funções da aplicação ficam na nuvem, por ex um banco de dados. 
		Warm Standby = Temos uma versão da aplicação completa porém em menor tamanho, então para se recuperar de um desastre é só aumentar o tamanho da aplicação
		Multi-Site / Hot-Site = Versão completa da aplicação em todo tempo (Custo máximo)

	CloudEndure Disaster Recovery
		Fácil de gravar seu servidor físico, virtual e baseado em nuvem na AWS
		Protege você dos maiores banco de dados críticos (Oracle, MySQL e SQL Server), aplicações SAP, etc...
		Replicação em nível de bloco para seus servidores

	DataSync
		Incremental
		Move uma quantidade de dados grande do on-premises para a AWS
		Pode sincronizar com S3(Qualquer storage classes, incluindo Glacier), EFS, Amazon FSx for Windows
		Replica tasks programadas por hora, dias e semanas
		Após carregar a primeira task, todas as outras serão incrementadas

	Fault Injection Simulator (FIS)
		Engenharia de caos, utilizado para saber como uma aplicação reage com problemas como por ex, CPU, Banco de dados, Memória, etc...
		Permite descobrir bugs e gargalos de performance
		Suporte com serviços aws: EC2, ECS, EKS, RDS
		Como funciona? Cria um experimento baseado em algum modelo, que gerará o caos em alguns recursos AWS (EC2, ECS, EKS, RDS),
			será monitorado pelo CloudWatch ou EventBridge e após o término do experimento veremos os resultados.
	
Architecting e Ecosystem

	AWS Cloud Best Partices

		Well Architected Framework and General Guiding Principles (Princípios gerais de orientação)
		
			Não tente adivinhar a capacidade e sim automatize usando escalonamento automático
			Teste o sistema em produção
			Automatize para fazer a arquitetura de forma Fácil
			Esteja pronto para evoluir a arquitetura
				Design baseado na mudança de requisitos
			Conduza a arquitetura baseada em dados
			Simule aplicativos para dias de venda a fim de estressar o sistema
		
		Design Principles
			Escalabilidade: vertical e horizontal
			Recursos descartáveis: Servidores devem ser fáceis de serem descartados a qualquer momento e de fácil configuração
			Automação: Serveless, infraestrutura como serviço, auto scaling...
			Não Acoplado:
				A idéia é não ter aplicações no padrão monolito e sim utilizar outros serviços para granular a aplicação
					Ex: Mensageria com SQS, SNS, etc...
			Serviços e não servidores: 
				Não use somente o EC2 para ter toda a configuração nele.
					Ex: Use serviços gerenciados, bancos de dados, serveless, etc...

		5 Pilares:
			
			1- Operational Excellence (Excelência Operacional)
				1° Prepare (AWS CloudFormation), Config
				2° Operate (AWS CloudFormation), Config, AWS CloudTrail, CloudWatch, X-Ray
				3° Evolve (AWS CloudFormation), CodeBuild, CodeCommit, CodeDeploy, CodePipeline

				A capacidade de executar e monitorar sistemas para entregar valores de negócios e melhorar continuamente os processos e procedimentos de suporte
				Infraestrutura como código (CloudFormation)
				Fazer mudanças reversíveis e pequenas, para que, em caso de falhas, você possa reverter
					Se você fizer grandes mudanças a cada 3 meses, isso não vai correr bem
				Refinar os procedimentos de operações com frequência, para que a equipe se familiarize mais com as operações, refine-as, automatize e faça melhorias
				Antecipe o fracasso				

			2- Security (Segurança)
				1° Gerenciamento de Identidade e acesso: IAM< AWS-STS, MFA Token, AWS Organizations
				2° Controles de Detecção: AWS Config, AWS CloudTrail, AWS CloudWatch
				3° Proteção de Infraestrutura: CloudFront, VPC, Shield, WAF, Inspector
				4° Proteção de Dados: KSM, S3, ELB, EBS, RDS 
				5° Resposta de Incidente: IAM, CloudFormation, CloudWatch Events, 

			3- Reliability (Confiabilidade)
				1° Fundação: IAM (Política de menor privilégio), VPC, Service Limits, Trusted Adivisor
				2° Gerenciamento de Mudanças: ASG, CloudWatch, CloudTrail, Config
				3° Gerenciamento de Falhas: Backups, CloudFormation, S3, S3 Glacier, Rota 53

			4- Performance Efficiency (Eficiência de desempenho)
				1° Selection (Seleção): Auto Scaling, Lambda, EBS, S3, RDS
				2° Review (Revisão): CloudFormation, AWS News.
				3° Monitoring (Monitoramento): CloudWatch, Lambda
				4° Tradeofss (Compensações): RDS, ElastiCache, Snowball, CloudFront

			5-Cost Optimization (Otimização de Custo)
				1° Conscientização sobre despesas: Budgets, AWS Cost and Usage Reports, AWS Cost Explorer, Reservede Instance Reporting
				2° Custo benefício: Spot Instance, Reserved Instance, S3 Glacier
				3° Combinando Oferta e Demanda: AWS Auto Scaling, Lambda
				4° Otimização ao longo do tempo: Trusted Adivisor, Cost and Usage Reports, AWS News Blog

		Well-Architected Tool
			Ferramenta que testa sua arquitetura e te dá sugestões de melhorias
		
		Right Sizing
			O tamanho da sua aplicação na nuvem deve começar com o mínimo, e com o passar do tempo e revisões deve aumentar ou diminuir
			Nunca deve começar com a maior instância existente por exemplo