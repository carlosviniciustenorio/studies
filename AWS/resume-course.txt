#!/bin/bash
# Use this for your user data (script from top to bottom)
# install httpd (Linux 2 version)

yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html

Núvem privada
	O provedor pode ser Rackspace
	
Public cloud
	Três provedores: Azure, Google Cloud e AWS
	
Hybrid Cloud
	Misutra de privado e publico / infra particular + aws
	
How can users access AWS?
	AWS Management Console (protected by password + MFA)
	AWS Command Line Interface (CLI): protected by access keys
	AWS Software Developer Kit (SDK) for code: protected by access keys

Types of Instance
    T2.Micro 
        T = Classe da Instância
        2 = Geração
        Micro = Tamanho, quanto maior, significa que a Instância terá mais RAM, CPU, etc...
    
    Memory Optimized = Instâncias para memória otimizada
        R6g
            R= RAM

        Existem R, X e Z    

    Storage Optimized = Instância utilizada ao acessar muitos conjuntos de dados no armazenamento local
        I3
        Existem D e H
	
IAM = Gerenciamento de identidade e acesso
	É possível criar grupos para uma organização.
	É possível ter um usuário em mais de um grupo
	Não é possível ter um grupo dentro de outro grupo
	É possível ter usuário sem grupo
		
	Policy
		É possível criar políticas
		É possível inserir políticas direto no usuário
		É possível inserir políticas no grupo de usuários e consequentemente os usuários do grupo terão essas políticas
		É possível adicionar políticas de senha e autenticação em conjunto com (MFA) Multi-factor authentication (outros dispositivos).
		
	Roles
		Funciona como permissões para serviços AWS
		ex: Uma instância do EC2 recebe uma IAM Role e tenta acessar alguma informação/serviço da AWS,
			essa instância usará a IAM Role como permissão. Caso esteja certo, terá acesso.
			
	Security Tools
		Access reports > Credential Reports = Extrai um relatório de credenciais no formato csv.
		Users > User > Access Advisor = Exibe todos os serviços utilizados pelo usuário e os que ele tem acesso mas não utiliza.
			OBS: Como na AWS trabalhamos com o princípio de menor privilégio, esse relatório nos permite retirar permissões não utilizadas por um usuário.
			
			
EC2 = Nuvem de computação Elástica
	É possível criar instâncias AWS configurando memória, processamento, etc...
		Uma das principais vantagens da nuvem, visto que se tivéssemos que fazer isso de maneira local, 
			o tempo seria muito superior para configurar um servidor.
	É considerado uma boa prática parar as instâncias enquanto não estiver utilizando.
	É considerado uma boa prática encerrar as instâncias caso não tenha mais utilidade, pois na nuvem tudo é descartável
	É possível criar backups antes de encerrar as instâncias.
	
	Classic ports to know
		22 = SSH (secure shell) - log into a Linux instance
		21 = FTP (File transfer protocol) - upload files using SSH
		22 = SFTP (Secure File Transfer Protocol) - upload files using SSH
		80 = HTTP - access unsecured websites
		443 = HTTPS - access secured websites
		3389 = RDP (Remote Desktop Protocol) - log into a Windows instance
	
	Grupo de Segurança (Security group) = é responsável por configurar os meios de conexões com o EC2.
		Ex: Caso a sua instância não tenha no grupo de segurança uma regra de entrada no protocolo HTTP,
			não será possível acessar a sua instância por um browser.
		É possível ter uma instância do EC2 com vários grupos de segurança, o resultado é a soma de todos eles.
		
	Elastic Block Store

		EBS Volume 
			É um volume específico para cada instância, podendo a instância estar vinculada a mais de um volume, ele pode ser utilizado para mais de uma, porém, nessa certificação isso não é considerado
			É possível ter um volume não vinculado a uma instância, pois ele não depende de uma instância para existir
			É possível manter o volume após o encerramento da instância, desmarcando a flag que é responsável por essa configuração.
			Nível gratuito: 30 GB de armazenamento EBS gratuito do tipo SSD ou SSD Magnético por mês
			É bloqueado por zona, se a zona da sua instância for X, o volume tem que ser criando na zona X para ser utilizado
			
		EBS Snapshot
			É um backup que pode ser realizado e utilizando como base para restaurar uma outra instância da mesma ou outra região.
			É possível criar um volume a partir do Snapshot realizado, para a mesma ou outra região.
			
	EC2 Image Builder
		É possível automatizar a criação de uma imagem com um sistema operacional, softwares desejados, rodar testes e criar instâncias automaticamente
		É possível fazer todo o fluxo acima porém criar a instância de forma manual.
		Deve-se atentar com a imagem que irá escolher pois algumas não são compatíveis com a instância t2.micro (gratuita)
		Deve-se atentar para fazer de forma manual pois a forma automática cria uma instância paga.
		
	EC2 Instance Store
		Tem um melhor desempenho para processamento input/output pois é diretamente no Hardware, porém é um armazenamento efêmero, onde você pode perder tudo ao parar a máquina.
		É uma boa utilizar para cache, dados temporários, buffer, conteúdos temporários.
		Não é uma boa utilizar para persistência de dados de longo prazo, como por ex um DB, use o EBS (Volume + Snapshot).
		Caso a instância falhe, o hardware também falhará
			
	AMI = Amazon Machine Image
		É possível criar uma AMI a partir de uma instância. Isso faz com que a instância iniciada a partir dessa AMI tenha todas as configurações já feitas
		
	EFS = Elastic File System
		Só funciona com instâncias Linux EC2
		É possível utilizar o armazenamento em mais de uma região e em mais de uma instância ao mesmo tempo, diferente do EBS (Elastic Block Store)
		Ao utilizar o EFS, todas as instâncias de diferente zonas que usam o EFS, vão persistir e consumir os arquivos da mesma origem em tempo real.
		OBS: A EFS-IA tem um desconto de 92% comparada a Padrão pois quando utilizamos EFS-IA concordamos que não buscaremos os arquivos todos os dias, apenas eventualmente
		
	Amazon FSx
        Sistemas para gerenciamento de arquivos, caso não queira usar o S3 por exemplo.	
        Existem os seguintes FSx: FSx for Lustre, FSx for Windows File Server, FSx for NetApp ONTAP

    Escalabilidade 
        É a capacidade de um sistema acomodar uma carga maior, tornando o hardware mais forte ou ampliando, ou adicionando nós ampliados
        Vertical 
            Temos uma aplicação no t2.micro e alteramos para t2.large a fim de atender uma demanda maior
            Há um limite de escalonamento vertical, que é o limite do Hardware
        
    Elasticidade
        Horizontal
            Ao invés de aumentar o tamaho da instância, aumentamos a quantidade de instâncias para a aplicação
            Ao aumentar o número de instância, é considerado um escalonamento externo
            Ao diminuir o número de instância, é considerado um escalonamento
    
        High Availability (Alta disponibilidade)
            Vai de mãos dados com o dimensionamento horizontal
            Significa que vc está executando seu app em mais de uma zona de disponibilidade na AWS
            Ex: Call center em NY e Call Center em San Francisco
                Caso NY tenha um desastre, a operação de San Francisco não será afetada.
    
    Agilidade
        Os recursos estão a apenas um clique de distância. Ao invés de uma confugração nova demorar uma semana por ex, demora 10s.

        Alta disponibilidade e Escalabilidade para EC2

    Load Balancer
        Normalmente são mapeados 3 zonas difenretes com subredes a fim de ter uma disponibilidade maior.
        A configuração do servidor é feita pela AWS, porém é possível criar um Load Balancer, contudo, você será responsável pela configuração, manutenção, etc...
        Recebe uma solicitação e destibui conforme necessário. Caso uma instância esteja com problema, a solicitação será enviada a outra instância.        
        
        Application:
            Load Balancer somente para aplicações web, protocolo HTTP/HTTPS. = Camada 7
        
        Rede:
            Load Balancer somente para rede, protocolo TCP. = Camada 4
                Milhões de solicitações por segundo, Jogos, etc...
				
	Auto Scaling Groups
		Configura automaticamente o load balancer e inicia as instâncias pré-configuradas
		Simple / Step Scaling
			Aumenta ou diminui a quantidade de instâncias de forma automática baseado na configuração de um alarme
				ex: Alarme com uso superior a 70% da CPU, adiciona duas instâncias.
					Alarme com uso inferior a 30% da CPU, remove uma instância.
					
		Target Tracking Scaling
			Ex: Quero que a média do uso da CPU das instâncias fique em torno de 40%. O ASG fará isso automaticamente
			
		Scheduled Scaling
			Escalonamento programado é quando vc sabe que em um determinado dia o número de acessos irá aumentar por um fator, e consequentemente quer que o n° de instâncias aumente
				Ex: Quinta-feira terá um jogo importante de um campeonato e o sistema receberá muitas apostas. Sendo assim, nesse dia a partir das 17hrs o ASG criará mais 5 instâncias EC2
		
		Predictive Scaling
			Usa os padrões de tráfego da máquina para prever o que acontecerá com base nos padrões anteriores
			
Amazon S3
	É Global, mas ao criar um Bucket, você deve selecionar uma AZ.
	Pode ser utilizado para qualquer tipo de armazenamento.
	Alguns serviços da AWS utilizam o S3 para fazer armazenamento, como por exemplo o Snapshot do EC2, ele grava seu backup no EC3.
	Normalmente, o S3 é utilizado para guardar arquivos
	Qualquer tipo de arquivo no S3 é considerado um objeto
	O S3 trabalha com buckets, podendo ter subpastas. Porém, cada arquivo é considerado um objeto, sendo ignorado qualquer tipo de subpastas.
	
	Website
		Pode ser utilizado para sites estáticos, basta configurar o bucket.
	
	Server Access Logging
		É possível configurar um bucket para receber logs de um outro bucket.
		Isso ajuda a avaliar se estão tentando invadir uma aplicação, etc...
		
	Replication
		É obrigatório ativar o versionamento de ambos os buckets que farão parte da replicação
		É possível replicar um bucket para outro bucket, independente da AZ.
		A replicação é feita de maneira assíncrona, e um dos motivos para existir a replicação é abaixar a latência.
		 Ex: Se uma pessoa mora na Europa, faz mais sentido ela acessar aos arquivos de um bucket que esteja na Europa.
		     Caso ela more na América Latina, faz mais sentido ela acessar aos arquivos da respectiva AZ.
		
		Deve ser configurado ou criado uma Role para o S3 a fim de realizar a replicação.
		
	Durability and Avaliability
	
		Durabilidade
			Os objetos tem uma durabilidade de 99.99999999%, ou seja, se você tem 10mm objetos, você perderá um único objeto a cada 10 mil anos
		
		Disponibilidade
			Tempo que o serviço fica disponível
			O S3 é gratuito e deve ficar em média de 53 minutos off por ano, dependendo da class de armazenamento (Storage Class).
		
	Storage Classes
	
		É possível fazer a movimentação dos objetos entre as classes de armazenamento (storage classes)
			OBS: A movimentação pode ser automatizada usando a configuração de ciclo de vida.
	
		1° S3 Standard - General Purpose
			99.99% disponibilidade
			Usado para dados acessados com frenquência
			Baixa latência e alto rendimento
			Pode sustentar até duas falhas simultâneas nas instalações (Portanto, se houver problemas, seus dados ainda estarão seguros).
			Casos de Uso (Big data, app móveis e de jogos, distribuição constante)
		
		2° S3 Standard-Infrequent Access (IA)
			99.99% disponibilidade
			O custo é menor comparado ao Padrão do S3.
			É utilizado quando você quer ter acesso rápido aos seus arquivos, porém não os acessa constantemente.
			Pode sustentar até duas falhas
			Casos de uso (Armazenamento de dados para recuperação de desastres, backups para acessar imediatamente porém não acessados com frequência.)
		
		3° S3 One Zone-Infrequent Access (IA)
			Mesma regra do S3 Standard-Infrequent Access, porém é limitado apenas para uma zona.
			Tem 99.5% de disponibilidade
			Valor inferior em até 20% comparado ao S3 Standard-Infrequent Access
			Casos de uso (Backup secundário, dados que possam ser recriados)
		
		4° S3 Intelligent Tiering
			99.99% disponibilidade
			Mesma latência e rendimento do S3 Standard
			Custo otimizado visto que de forma automática os arquivos mais acessados e menos acessados serão movidos automaticamente para as categorias certas.
			Resistentes a eventos que afetarão uma AZ inteira
		
		5° Amazon Glacier e Amazon Glacier Deep Archive
			Utilizada para guardar backups para um longo tempo
			Existem várias opções de recuperação de tempo e taxas sempre que recuperar
		
			Amazon Glacier (Barato)
				Expedited (1 a 5 minutos)
				Standard (3 a 5 horas)
				Bulk (5 a 12 horas)
			
			Amazon Glacier Deep Archive
				É a opção de armazenamento mais barata da AWS
				Standard (12 horas)
				Bulk (48 horas)
				
	S3 Object Lock & Glacier Vault Lock
		
		Object Lock
			Adotado o modelo WORM (Write Once Read Many).
			Bloqueia a versão do objeto para não ser deletado ou modificado num período especificado.
		
		Glacier Vault Lock
			Adotado o modelo WORM (Write Once Read Many).
			Cria uma política de bloqueio e essa política impede futuras edições do arquivo 
			 OBS: A política é imutável, depois de configurada, ninguém poderá excluí-la.			 
			Casos de uso (Quando vc tem requisitos de conformidade e retenção de dados, ou seja, não quer perder de forma alguma um objeto - Auditoria)
	
	Criptografia
		
		Sem criptografia
			Não há criptografia em ambos os lados (cliente e servidor)
		
		Com criptografia no servidor
			O usuário não envia o arquivo criptografado, porém o servidor do bucket criptografa ao receber.
			
		Criptografia no lado do usuário
			A criptografa é feita tanto pelo usuário quanto pelo servidor.
			
			
	AWS Snow Family
	
		Snowcone
			Storage Capacity: 8 TB usable
			Migration Size: Up to 24tb, online and offline
			DataSync agent: Pre-Installed
			
		Snowball Edge Storage Optimized
			Storage Capacity: 80 TB usable
			Migration Size: Up to petabytes, offline
			Storage Clustering: Up to 15 nodes
			
		Snowmobile
			Storage Capacity: < 100 PB
			Migration Size: Up to exabytes, offline
			
	AWS Storage Cloud Native Options
		
		É uma forma de utilizar o local junto com a nuvem
		
		Block
			Usa o EBS e EC2 Instance Store
			
		File
			Usa o Amazon EFS
			
		Object
			Usa o S3 e Glacier

Databases & Analytics

	RDS & Aurora

		RDS
			É um serviço de banco de dados relacional utilizando a linguagem SQL para consultas
			Permite criar banco de dados na nuvem gerenciados pela AWS, sendo eles: Postgres, MySQL, MariaDB, Oracle, SQL Server e Aurora (AWS Proprietary database)

			OBS: 
				Aurora DB não é um banco de dados open source, é fornecido pela AWS, suporta os tipos (PostgreSQL e MYSQL)
				Benefícios ao usar Aurora: 
					É otimizado para a nuvem, tem um ganho de desempenho em 5x ao MySQL no RDS e 3x ao PostgreSQL no RDS
					Não temos que nos preocupar com armazenamento pois eles são aumentam de forma automática em incrementos de 10gb até 64tb.

				Malefícios: É 20% mais caro que o RDS, porém acaba valendo a pena por ser mais otimizado caso seu banco de dados seja MySQL ou PostgreSQL.
			
			Benefícios ao utilizar um RDS
				Provisionamento automático, manutenções no sistema operacional
				Backups contínuos podendo especificar um período para restaurar o banco
				Painéis de Monitoramento para ver como o Banco de Dados está
				Ler réplicas a fim de melhorar a performance
				Multi zonas a fim de estar pronto para ter um plano de recuperação em caso de desastre
				Configurar janelas de manutenção para atualizações
				Capacidade de Escalabilidade (Vertical e Horizontal)
				EBS Volume (gp2 ou io l)

			Malefícios
				Não é possível utilizar o SSH na instância

			

